-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParLatteMalinowe.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt ListStmt                          (14)
	Stmt -> Block                                      (15)
	Stmt -> 'if' '(' Expr ')' Block                    (16)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (17)
	Stmt -> OrdStmt                                    (18)
	OrdStmt -> 'while' '(' Expr ')' LBlock             (19)
	OrdStmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' LBlock   (20)
	OrdStmt -> ';'                                     (21)
	OrdStmt -> Type ListItem ';'                       (22)
	OrdStmt -> Ident '=' Expr ';'                      (23)
	OrdStmt -> Ident '++' ';'                          (24)
	OrdStmt -> Ident '--' ';'                          (25)
	OrdStmt -> 'return' Expr ';'                       (26)
	OrdStmt -> 'return' ';'                            (27)
	OrdStmt -> 'print' '(' Expr ')' ';'                (28)
	OrdStmt -> Expr ';'                                (29)
	Item -> Ident                                      (30)
	Item -> Ident '=' Expr                             (31)
	ListItem -> Item                                   (32)
	ListItem -> Item ',' ListItem                      (33)
	LBlock -> '{' ListLStmt '}'                        (34)
	ListLStmt ->                                       (35)
	ListLStmt -> LStmt ListLStmt                       (36)
	LStmt -> OrdStmt                                   (37)
	LStmt -> LBlock                                    (38)
	LStmt -> 'if' '(' Expr ')' LBlock                  (39)
	LStmt -> 'if' '(' Expr ')' LBlock 'else' LBlock    (40)
	LStmt -> 'break' ';'                               (41)
	LStmt -> 'continue' ';'                            (42)
	Type -> 'int'                                      (43)
	Type -> 'string'                                   (44)
	Type -> 'bool'                                     (45)
	Type -> 'void'                                     (46)
	Expr6 -> Ident                                     (47)
	Expr6 -> Integer                                   (48)
	Expr6 -> 'true'                                    (49)
	Expr6 -> 'false'                                   (50)
	Expr6 -> Ident '(' ListExpr ')'                    (51)
	Expr6 -> String                                    (52)
	Expr6 -> '(' Expr ')'                              (53)
	Expr5 -> '-' Expr6                                 (54)
	Expr5 -> '!' Expr6                                 (55)
	Expr5 -> Expr6                                     (56)
	Expr4 -> Expr4 MulOp Expr5                         (57)
	Expr4 -> Expr5                                     (58)
	Expr3 -> Expr3 AddOp Expr4                         (59)
	Expr3 -> Expr4                                     (60)
	Expr2 -> Expr2 RelOp Expr3                         (61)
	Expr2 -> Expr3                                     (62)
	Expr1 -> Expr2 '&&' Expr1                          (63)
	Expr1 -> Expr2                                     (64)
	Expr -> Expr1 '||' Expr                            (65)
	Expr -> Expr1                                      (66)
	ListExpr ->                                        (67)
	ListExpr -> Expr                                   (68)
	ListExpr -> Expr ',' ListExpr                      (69)
	AddOp -> '+'                                       (70)
	AddOp -> '-'                                       (71)
	MulOp -> '*'                                       (72)
	MulOp -> '/'                                       (73)
	MulOp -> '%'                                       (74)
	RelOp -> '<'                                       (75)
	RelOp -> '<='                                      (76)
	RelOp -> '>'                                       (77)
	RelOp -> '>='                                      (78)
	RelOp -> '=='                                      (79)
	RelOp -> '!='                                      (80)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'bool'         { PT _ (TS _ 21) }
	'break'        { PT _ (TS _ 22) }
	'continue'     { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'for'          { PT _ (TS _ 26) }
	'from'         { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'print'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'to'           { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18
	OrdStmt         rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29
	Item            rules 30, 31
	ListItem        rules 32, 33
	LBlock          rule  34
	ListLStmt       rules 35, 36
	LStmt           rules 37, 38, 39, 40, 41, 42
	Type            rules 43, 44, 45, 46
	Expr6           rules 47, 48, 49, 50, 51, 52, 53
	Expr5           rules 54, 55, 56
	Expr4           rules 57, 58
	Expr3           rules 59, 60
	Expr2           rules 61, 62
	Expr1           rules 63, 64
	Expr            rules 65, 66
	ListExpr        rules 67, 68, 69
	AddOp           rules 70, 71
	MulOp           rules 72, 73, 74
	RelOp           rules 75, 76, 77, 78, 79, 80

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'from'         reduce using rule 1
	'to'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'bool' .                                    (rule 45)

	L_Ident        reduce using rule 45


State 8

	Type -> 'int' .                                     (rule 43)

	L_Ident        reduce using rule 43


State 9

	Type -> 'string' .                                  (rule 44)

	L_Ident        reduce using rule 44


State 10

	Type -> 'void' .                                    (rule 46)

	L_Ident        reduce using rule 46


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 19


State 15

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 18


State 16

	Arg -> Type . Ident                                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 20
	Type           goto state 16

State 20

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 21

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'bool'         reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 22

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 42
	'for'          shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'print'        shift, and enter state 45
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Block          goto state 26
	ListStmt       goto state 27
	Stmt           goto state 28
	OrdStmt        goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 23

	OrdStmt -> Ident . '=' Expr ';'                     (rule 23)
	OrdStmt -> Ident . '++' ';'                         (rule 24)
	OrdStmt -> Ident . '--' ';'                         (rule 25)
	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 83
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           shift, and enter state 84
	'-'            reduce using rule 47
	'--'           shift, and enter state 85
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'='            shift, and enter state 86
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'||'           reduce using rule 47


State 24

	Expr6 -> Integer .                                  (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'to'           reduce using rule 48
	'||'           reduce using rule 48


State 25

	Expr6 -> String .                                   (rule 52)

	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'to'           reduce using rule 52
	'||'           reduce using rule 52


State 26

	Stmt -> Block .                                     (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 27

	Block -> '{' ListStmt . '}'                         (rule 12)

	'}'            shift, and enter state 82


State 28

	ListStmt -> Stmt . ListStmt                         (rule 14)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 7
	'false'        shift, and enter state 42
	'for'          shift, and enter state 43
	'if'           shift, and enter state 44
	'int'          shift, and enter state 8
	'print'        shift, and enter state 45
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Block          goto state 26
	ListStmt       goto state 81
	Stmt           goto state 28
	OrdStmt        goto state 29
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 29

	Stmt -> OrdStmt .                                   (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 30

	OrdStmt -> Type . ListItem ';'                      (rule 22)

	L_Ident        shift, and enter state 2

	Ident          goto state 78
	Item           goto state 79
	ListItem       goto state 80

State 31

	Expr5 -> Expr6 .                                    (rule 56)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'to'           reduce using rule 56
	'||'           reduce using rule 56


State 32

	Expr4 -> Expr5 .                                    (rule 58)

	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'to'           reduce using rule 58
	'||'           reduce using rule 58


State 33

	Expr4 -> Expr4 . MulOp Expr5                        (rule 57)
	Expr3 -> Expr4 .                                    (rule 60)

	'!='           reduce using rule 60
	'%'            shift, and enter state 75
	'&&'           reduce using rule 60
	')'            reduce using rule 60
	'*'            shift, and enter state 76
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'/'            shift, and enter state 77
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'to'           reduce using rule 60
	'||'           reduce using rule 60

	MulOp          goto state 74

State 34

	Expr3 -> Expr3 . AddOp Expr4                        (rule 59)
	Expr2 -> Expr3 .                                    (rule 62)

	'!='           reduce using rule 62
	'&&'           reduce using rule 62
	')'            reduce using rule 62
	'+'            shift, and enter state 72
	','            reduce using rule 62
	'-'            shift, and enter state 73
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'to'           reduce using rule 62
	'||'           reduce using rule 62

	AddOp          goto state 71

State 35

	Expr2 -> Expr2 . RelOp Expr3                        (rule 61)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 63)
	Expr1 -> Expr2 .                                    (rule 64)

	'!='           shift, and enter state 64
	'&&'           shift, and enter state 65
	')'            reduce using rule 64
	','            reduce using rule 64
	';'            reduce using rule 64
	'<'            shift, and enter state 66
	'<='           shift, and enter state 67
	'=='           shift, and enter state 68
	'>'            shift, and enter state 69
	'>='           shift, and enter state 70
	'to'           reduce using rule 64
	'||'           reduce using rule 64

	RelOp          goto state 63

State 36

	Expr -> Expr1 . '||' Expr                           (rule 65)
	Expr -> Expr1 .                                     (rule 66)

	')'            reduce using rule 66
	','            reduce using rule 66
	';'            reduce using rule 66
	'to'           reduce using rule 66
	'||'           shift, and enter state 62


State 37

	OrdStmt -> Expr . ';'                               (rule 29)

	';'            shift, and enter state 61


State 38

	Expr5 -> '!' . Expr6                                (rule 55)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 60

State 39

	Expr6 -> '(' . Expr ')'                             (rule 53)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 59

State 40

	Expr5 -> '-' . Expr6                                (rule 54)

	'('            shift, and enter state 39
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 58

State 41

	OrdStmt -> ';' .                                    (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 42

	Expr6 -> 'false' .                                  (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'to'           reduce using rule 50
	'||'           reduce using rule 50


State 43

	OrdStmt -> 'for' . '(' Ident 'from' Expr 'to' Expr ')' LBlock    (rule 20)

	'('            shift, and enter state 57


State 44

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 16)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 17)

	'('            shift, and enter state 56


State 45

	OrdStmt -> 'print' . '(' Expr ')' ';'               (rule 28)

	'('            shift, and enter state 55


State 46

	OrdStmt -> 'return' . Expr ';'                      (rule 26)
	OrdStmt -> 'return' . ';'                           (rule 27)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 54
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 53

State 47

	Expr6 -> 'true' .                                   (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'to'           reduce using rule 49
	'||'           reduce using rule 49


State 48

	OrdStmt -> 'while' . '(' Expr ')' LBlock            (rule 19)

	'('            shift, and enter state 51


State 49

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'to'           reduce using rule 2
	'||'           reduce using rule 2


State 50

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'to'           reduce using rule 3
	'||'           reduce using rule 3


State 51

	OrdStmt -> 'while' '(' . Expr ')' LBlock            (rule 19)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 105

State 52

	Expr6 -> Ident .                                    (rule 47)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 51)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            shift, and enter state 83
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'to'           reduce using rule 47
	'||'           reduce using rule 47


State 53

	OrdStmt -> 'return' Expr . ';'                      (rule 26)

	';'            shift, and enter state 104


State 54

	OrdStmt -> 'return' ';' .                           (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 55

	OrdStmt -> 'print' '(' . Expr ')' ';'               (rule 28)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 103

State 56

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 16)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 17)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 102

State 57

	OrdStmt -> 'for' '(' . Ident 'from' Expr 'to' Expr ')' LBlock    (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 101

State 58

	Expr5 -> '-' Expr6 .                                (rule 54)

	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'to'           reduce using rule 54
	'||'           reduce using rule 54


State 59

	Expr6 -> '(' Expr . ')'                             (rule 53)

	')'            shift, and enter state 100


State 60

	Expr5 -> '!' Expr6 .                                (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'to'           reduce using rule 55
	'||'           reduce using rule 55


State 61

	OrdStmt -> Expr ';' .                               (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 62

	Expr -> Expr1 '||' . Expr                           (rule 65)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 99

State 63

	Expr2 -> Expr2 RelOp . Expr3                        (rule 61)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 98

State 64

	RelOp -> '!=' .                                     (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 65

	Expr1 -> Expr2 '&&' . Expr1                         (rule 63)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 97

State 66

	RelOp -> '<' .                                      (rule 75)

	'!'            reduce using rule 75
	'('            reduce using rule 75
	'-'            reduce using rule 75
	'false'        reduce using rule 75
	'true'         reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75


State 67

	RelOp -> '<=' .                                     (rule 76)

	'!'            reduce using rule 76
	'('            reduce using rule 76
	'-'            reduce using rule 76
	'false'        reduce using rule 76
	'true'         reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76


State 68

	RelOp -> '==' .                                     (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 69

	RelOp -> '>' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 70

	RelOp -> '>=' .                                     (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 71

	Expr3 -> Expr3 AddOp . Expr4                        (rule 59)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 96

State 72

	AddOp -> '+' .                                      (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 73

	AddOp -> '-' .                                      (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 74

	Expr4 -> Expr4 MulOp . Expr5                        (rule 57)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 95

State 75

	MulOp -> '%' .                                      (rule 74)

	'!'            reduce using rule 74
	'('            reduce using rule 74
	'-'            reduce using rule 74
	'false'        reduce using rule 74
	'true'         reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74


State 76

	MulOp -> '*' .                                      (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 77

	MulOp -> '/' .                                      (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	'-'            reduce using rule 73
	'false'        reduce using rule 73
	'true'         reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 78

	Item -> Ident .                                     (rule 30)
	Item -> Ident . '=' Expr                            (rule 31)

	','            reduce using rule 30
	';'            reduce using rule 30
	'='            shift, and enter state 94


State 79

	ListItem -> Item .                                  (rule 32)
	ListItem -> Item . ',' ListItem                     (rule 33)

	','            shift, and enter state 93
	';'            reduce using rule 32


State 80

	OrdStmt -> Type ListItem . ';'                      (rule 22)

	';'            shift, and enter state 92


State 81

	ListStmt -> Stmt ListStmt .                         (rule 14)

	'}'            reduce using rule 14


State 82

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 83

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 51)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 67
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 90
	ListExpr       goto state 91

State 84

	OrdStmt -> Ident '++' . ';'                         (rule 24)

	';'            shift, and enter state 89


State 85

	OrdStmt -> Ident '--' . ';'                         (rule 25)

	';'            shift, and enter state 88


State 86

	OrdStmt -> Ident '=' . Expr ';'                     (rule 23)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 87

State 87

	OrdStmt -> Ident '=' Expr . ';'                     (rule 23)

	';'            shift, and enter state 114


State 88

	OrdStmt -> Ident '--' ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 89

	OrdStmt -> Ident '++' ';' .                         (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 90

	ListExpr -> Expr .                                  (rule 68)
	ListExpr -> Expr . ',' ListExpr                     (rule 69)

	')'            reduce using rule 68
	','            shift, and enter state 113


State 91

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 51)

	')'            shift, and enter state 112


State 92

	OrdStmt -> Type ListItem ';' .                      (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 93

	ListItem -> Item ',' . ListItem                     (rule 33)

	L_Ident        shift, and enter state 2

	Ident          goto state 78
	Item           goto state 79
	ListItem       goto state 111

State 94

	Item -> Ident '=' . Expr                            (rule 31)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 110

State 95

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'to'           reduce using rule 57
	'||'           reduce using rule 57


State 96

	Expr4 -> Expr4 . MulOp Expr5                        (rule 57)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 59)

	'!='           reduce using rule 59
	'%'            shift, and enter state 75
	'&&'           reduce using rule 59
	')'            reduce using rule 59
	'*'            shift, and enter state 76
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'/'            shift, and enter state 77
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'to'           reduce using rule 59
	'||'           reduce using rule 59

	MulOp          goto state 74

State 97

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 63)

	')'            reduce using rule 63
	','            reduce using rule 63
	';'            reduce using rule 63
	'to'           reduce using rule 63
	'||'           reduce using rule 63


State 98

	Expr3 -> Expr3 . AddOp Expr4                        (rule 59)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 61)

	'!='           reduce using rule 61
	'&&'           reduce using rule 61
	')'            reduce using rule 61
	'+'            shift, and enter state 72
	','            reduce using rule 61
	'-'            shift, and enter state 73
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'to'           reduce using rule 61
	'||'           reduce using rule 61

	AddOp          goto state 71

State 99

	Expr -> Expr1 '||' Expr .                           (rule 65)

	')'            reduce using rule 65
	','            reduce using rule 65
	';'            reduce using rule 65
	'to'           reduce using rule 65


State 100

	Expr6 -> '(' Expr ')' .                             (rule 53)

	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'to'           reduce using rule 53
	'||'           reduce using rule 53


State 101

	OrdStmt -> 'for' '(' Ident . 'from' Expr 'to' Expr ')' LBlock    (rule 20)

	'from'         shift, and enter state 109


State 102

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 16)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 17)

	')'            shift, and enter state 108


State 103

	OrdStmt -> 'print' '(' Expr . ')' ';'               (rule 28)

	')'            shift, and enter state 107


State 104

	OrdStmt -> 'return' Expr ';' .                      (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 105

	OrdStmt -> 'while' '(' Expr . ')' LBlock            (rule 19)

	')'            shift, and enter state 106


State 106

	OrdStmt -> 'while' '(' Expr ')' . LBlock            (rule 19)

	'{'            shift, and enter state 120

	LBlock         goto state 119

State 107

	OrdStmt -> 'print' '(' Expr ')' . ';'               (rule 28)

	';'            shift, and enter state 118


State 108

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 16)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 17)

	'{'            shift, and enter state 22

	Block          goto state 117

State 109

	OrdStmt -> 'for' '(' Ident 'from' . Expr 'to' Expr ')' LBlock    (rule 20)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 116

State 110

	Item -> Ident '=' Expr .                            (rule 31)

	','            reduce using rule 31
	';'            reduce using rule 31


State 111

	ListItem -> Item ',' ListItem .                     (rule 33)

	';'            reduce using rule 33


State 112

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 51)

	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'to'           reduce using rule 51
	'||'           reduce using rule 51


State 113

	ListExpr -> Expr ',' . ListExpr                     (rule 69)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	')'            reduce using rule 67
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 90
	ListExpr       goto state 115

State 114

	OrdStmt -> Ident '=' Expr ';' .                     (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 115

	ListExpr -> Expr ',' ListExpr .                     (rule 69)

	')'            reduce using rule 69


State 116

	OrdStmt -> 'for' '(' Ident 'from' Expr . 'to' Expr ')' LBlock    (rule 20)

	'to'           shift, and enter state 129


State 117

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 16)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 17)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'else'         shift, and enter state 128
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 118

	OrdStmt -> 'print' '(' Expr ')' ';' .               (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 119

	OrdStmt -> 'while' '(' Expr ')' LBlock .            (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 120

	LBlock -> '{' . ListLStmt '}'                       (rule 34)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 125
	'continue'     shift, and enter state 126
	'false'        shift, and enter state 42
	'for'          shift, and enter state 43
	'if'           shift, and enter state 127
	'int'          shift, and enter state 8
	'print'        shift, and enter state 45
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 120
	'}'            reduce using rule 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	OrdStmt        goto state 121
	LBlock         goto state 122
	ListLStmt      goto state 123
	LStmt          goto state 124
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 121

	LStmt -> OrdStmt .                                  (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'bool'         reduce using rule 37
	'break'        reduce using rule 37
	'continue'     reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'print'        reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 122

	LStmt -> LBlock .                                   (rule 38)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'bool'         reduce using rule 38
	'break'        reduce using rule 38
	'continue'     reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'print'        reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 123

	LBlock -> '{' ListLStmt . '}'                       (rule 34)

	'}'            shift, and enter state 136


State 124

	ListLStmt -> LStmt . ListLStmt                      (rule 36)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	';'            shift, and enter state 41
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 125
	'continue'     shift, and enter state 126
	'false'        shift, and enter state 42
	'for'          shift, and enter state 43
	'if'           shift, and enter state 127
	'int'          shift, and enter state 8
	'print'        shift, and enter state 45
	'return'       shift, and enter state 46
	'string'       shift, and enter state 9
	'true'         shift, and enter state 47
	'void'         shift, and enter state 10
	'while'        shift, and enter state 48
	'{'            shift, and enter state 120
	'}'            reduce using rule 35
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	OrdStmt        goto state 121
	LBlock         goto state 122
	ListLStmt      goto state 135
	LStmt          goto state 124
	Type           goto state 30
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 37

State 125

	LStmt -> 'break' . ';'                              (rule 41)

	';'            shift, and enter state 134


State 126

	LStmt -> 'continue' . ';'                           (rule 42)

	';'            shift, and enter state 133


State 127

	LStmt -> 'if' . '(' Expr ')' LBlock                 (rule 39)
	LStmt -> 'if' . '(' Expr ')' LBlock 'else' LBlock    (rule 40)

	'('            shift, and enter state 132


State 128

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 17)

	'{'            shift, and enter state 22

	Block          goto state 131

State 129

	OrdStmt -> 'for' '(' Ident 'from' Expr 'to' . Expr ')' LBlock    (rule 20)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 130

State 130

	OrdStmt -> 'for' '(' Ident 'from' Expr 'to' Expr . ')' LBlock    (rule 20)

	')'            shift, and enter state 138


State 131

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 132

	LStmt -> 'if' '(' . Expr ')' LBlock                 (rule 39)
	LStmt -> 'if' '(' . Expr ')' LBlock 'else' LBlock    (rule 40)

	'!'            shift, and enter state 38
	'('            shift, and enter state 39
	'-'            shift, and enter state 40
	'false'        shift, and enter state 42
	'true'         shift, and enter state 47
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 49
	L_quoted       shift, and enter state 50

	Ident          goto state 52
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 31
	Expr5          goto state 32
	Expr4          goto state 33
	Expr3          goto state 34
	Expr2          goto state 35
	Expr1          goto state 36
	Expr           goto state 137

State 133

	LStmt -> 'continue' ';' .                           (rule 42)

	'!'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'bool'         reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'int'          reduce using rule 42
	'print'        reduce using rule 42
	'return'       reduce using rule 42
	'string'       reduce using rule 42
	'true'         reduce using rule 42
	'void'         reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42


State 134

	LStmt -> 'break' ';' .                              (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'bool'         reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'print'        reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'true'         reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


State 135

	ListLStmt -> LStmt ListLStmt .                      (rule 36)

	'}'            reduce using rule 36


State 136

	LBlock -> '{' ListLStmt '}' .                       (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'bool'         reduce using rule 34
	'break'        reduce using rule 34
	'continue'     reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'print'        reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 137

	LStmt -> 'if' '(' Expr . ')' LBlock                 (rule 39)
	LStmt -> 'if' '(' Expr . ')' LBlock 'else' LBlock    (rule 40)

	')'            shift, and enter state 140


State 138

	OrdStmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' . LBlock    (rule 20)

	'{'            shift, and enter state 120

	LBlock         goto state 139

State 139

	OrdStmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' LBlock .    (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 140

	LStmt -> 'if' '(' Expr ')' . LBlock                 (rule 39)
	LStmt -> 'if' '(' Expr ')' . LBlock 'else' LBlock    (rule 40)

	'{'            shift, and enter state 120

	LBlock         goto state 141

State 141

	LStmt -> 'if' '(' Expr ')' LBlock .                 (rule 39)
	LStmt -> 'if' '(' Expr ')' LBlock . 'else' LBlock    (rule 40)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'bool'         reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'else'         shift, and enter state 142
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'print'        reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 142

	LStmt -> 'if' '(' Expr ')' LBlock 'else' . LBlock    (rule 40)

	'{'            shift, and enter state 120

	LBlock         goto state 143

State 143

	LStmt -> 'if' '(' Expr ')' LBlock 'else' LBlock .    (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'bool'         reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'print'        reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 81
Number of terminals: 42
Number of non-terminals: 30
Number of states: 144

-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from ParLatteMalinowe.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	ListTopDef -> TopDef                               (6)
	ListTopDef -> TopDef ListTopDef                    (7)
	Arg -> Type Ident                                  (8)
	ListArg ->                                         (9)
	ListArg -> Arg                                     (10)
	ListArg -> Arg ',' ListArg                         (11)
	Block -> '{' ListStmt '}'                          (12)
	ListStmt ->                                        (13)
	ListStmt -> Stmt ListStmt                          (14)
	Stmt -> Block                                      (15)
	Stmt -> 'if' '(' Expr ')' Block                    (16)
	Stmt -> 'if' '(' Expr ')' Block 'else' Block       (17)
	Stmt -> 'while' '(' Expr ')' Block                 (18)
	Stmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' Block   (19)
	Stmt -> ';'                                        (20)
	Stmt -> Type ListItem ';'                          (21)
	Stmt -> Ident '=' Expr ';'                         (22)
	Stmt -> Ident '++' ';'                             (23)
	Stmt -> Ident '--' ';'                             (24)
	Stmt -> 'return' Expr ';'                          (25)
	Stmt -> 'return' ';'                               (26)
	Stmt -> 'print' '(' Expr ')' ';'                   (27)
	Stmt -> Expr ';'                                   (28)
	Stmt -> 'break' ';'                                (29)
	Stmt -> 'continue' ';'                             (30)
	Item -> Ident                                      (31)
	Item -> Ident '=' Expr                             (32)
	ListItem -> Item                                   (33)
	ListItem -> Item ',' ListItem                      (34)
	Type -> 'int'                                      (35)
	Type -> 'string'                                   (36)
	Type -> 'bool'                                     (37)
	Type -> 'void'                                     (38)
	Expr6 -> Ident                                     (39)
	Expr6 -> Integer                                   (40)
	Expr6 -> 'true'                                    (41)
	Expr6 -> 'false'                                   (42)
	Expr6 -> String                                    (43)
	Expr6 -> Ident '(' ListExpr ')'                    (44)
	Expr6 -> '(' Expr ')'                              (45)
	Expr5 -> '-' Expr6                                 (46)
	Expr5 -> '!' Expr6                                 (47)
	Expr5 -> Expr6                                     (48)
	Expr4 -> Expr4 MulOp Expr5                         (49)
	Expr4 -> Expr5                                     (50)
	Expr3 -> Expr3 AddOp Expr4                         (51)
	Expr3 -> Expr4                                     (52)
	Expr2 -> Expr2 RelOp Expr3                         (53)
	Expr2 -> Expr3                                     (54)
	Expr1 -> Expr2 '&&' Expr1                          (55)
	Expr1 -> Expr2                                     (56)
	Expr -> Expr1 '||' Expr                            (57)
	Expr -> Expr1                                      (58)
	ListExpr ->                                        (59)
	ListExpr -> Expr                                   (60)
	ListExpr -> Expr ',' ListExpr                      (61)
	AddOp -> '+'                                       (62)
	AddOp -> '-'                                       (63)
	MulOp -> '*'                                       (64)
	MulOp -> '/'                                       (65)
	MulOp -> '%'                                       (66)
	RelOp -> '<'                                       (67)
	RelOp -> '<='                                      (68)
	RelOp -> '>'                                       (69)
	RelOp -> '>='                                      (70)
	RelOp -> '=='                                      (71)
	RelOp -> '!='                                      (72)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	'*'            { PT _ (TS _ 7) }
	'+'            { PT _ (TS _ 8) }
	'++'           { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'--'           { PT _ (TS _ 12) }
	'/'            { PT _ (TS _ 13) }
	';'            { PT _ (TS _ 14) }
	'<'            { PT _ (TS _ 15) }
	'<='           { PT _ (TS _ 16) }
	'='            { PT _ (TS _ 17) }
	'=='           { PT _ (TS _ 18) }
	'>'            { PT _ (TS _ 19) }
	'>='           { PT _ (TS _ 20) }
	'bool'         { PT _ (TS _ 21) }
	'break'        { PT _ (TS _ 22) }
	'continue'     { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'for'          { PT _ (TS _ 26) }
	'from'         { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'print'        { PT _ (TS _ 30) }
	'return'       { PT _ (TS _ 31) }
	'string'       { PT _ (TS _ 32) }
	'to'           { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'void'         { PT _ (TS _ 35) }
	'while'        { PT _ (TS _ 36) }
	'{'            { PT _ (TS _ 37) }
	'||'           { PT _ (TS _ 38) }
	'}'            { PT _ (TS _ 39) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rule  5
	ListTopDef      rules 6, 7
	Arg             rule  8
	ListArg         rules 9, 10, 11
	Block           rule  12
	ListStmt        rules 13, 14
	Stmt            rules 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30
	Item            rules 31, 32
	ListItem        rules 33, 34
	Type            rules 35, 36, 37, 38
	Expr6           rules 39, 40, 41, 42, 43, 44, 45
	Expr5           rules 46, 47, 48
	Expr4           rules 49, 50
	Expr3           rules 51, 52
	Expr2           rules 53, 54
	Expr1           rules 55, 56
	Expr            rules 57, 58
	ListExpr        rules 59, 60, 61
	AddOp           rules 62, 63
	MulOp           rules 64, 65, 66
	RelOp           rules 67, 68, 69, 70, 71, 72

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Program        goto state 3
	TopDef         goto state 4
	ListTopDef     goto state 5
	Type           goto state 6

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'/'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'from'         reduce using rule 1
	'to'           reduce using rule 1
	'||'           reduce using rule 1


State 3

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 4

	ListTopDef -> TopDef .                              (rule 6)
	ListTopDef -> TopDef . ListTopDef                   (rule 7)

	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10
	%eof           reduce using rule 6

	TopDef         goto state 4
	ListTopDef     goto state 12
	Type           goto state 6

State 5

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 6

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)

	L_Ident        shift, and enter state 2

	Ident          goto state 11

State 7

	Type -> 'bool' .                                    (rule 37)

	L_Ident        reduce using rule 37


State 8

	Type -> 'int' .                                     (rule 35)

	L_Ident        reduce using rule 35


State 9

	Type -> 'string' .                                  (rule 36)

	L_Ident        reduce using rule 36


State 10

	Type -> 'void' .                                    (rule 38)

	L_Ident        reduce using rule 38


State 11

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 13


State 12

	ListTopDef -> TopDef ListTopDef .                   (rule 7)

	%eof           reduce using rule 7


State 13

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 15
	Type           goto state 16

State 14

	ListArg -> Arg .                                    (rule 10)
	ListArg -> Arg . ',' ListArg                        (rule 11)

	')'            reduce using rule 10
	','            shift, and enter state 19


State 15

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 18


State 16

	Arg -> Type . Ident                                 (rule 8)

	L_Ident        shift, and enter state 2

	Ident          goto state 17

State 17

	Arg -> Type Ident .                                 (rule 8)

	')'            reduce using rule 8
	','            reduce using rule 8


State 18

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 22

	Block          goto state 21

State 19

	ListArg -> Arg ',' . ListArg                        (rule 11)

	')'            reduce using rule 9
	'bool'         shift, and enter state 7
	'int'          shift, and enter state 8
	'string'       shift, and enter state 9
	'void'         shift, and enter state 10

	Arg            goto state 14
	ListArg        goto state 20
	Type           goto state 16

State 20

	ListArg -> Arg ',' ListArg .                        (rule 11)

	')'            reduce using rule 11


State 21

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'bool'         reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	%eof           reduce using rule 5


State 22

	Block -> '{' . ListStmt '}'                         (rule 12)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'print'        shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 9
	'true'         shift, and enter state 48
	'void'         shift, and enter state 10
	'while'        shift, and enter state 49
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Block          goto state 26
	ListStmt       goto state 27
	Stmt           goto state 28
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 23

	Stmt -> Ident . '=' Expr ';'                        (rule 22)
	Stmt -> Ident . '++' ';'                            (rule 23)
	Stmt -> Ident . '--' ';'                            (rule 24)
	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 44)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 86
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           shift, and enter state 87
	'-'            reduce using rule 39
	'--'           shift, and enter state 88
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'='            shift, and enter state 89
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'||'           reduce using rule 39


State 24

	Expr6 -> Integer .                                  (rule 40)

	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	')'            reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'to'           reduce using rule 40
	'||'           reduce using rule 40


State 25

	Expr6 -> String .                                   (rule 43)

	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	')'            reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'to'           reduce using rule 43
	'||'           reduce using rule 43


State 26

	Stmt -> Block .                                     (rule 15)

	'!'            reduce using rule 15
	'('            reduce using rule 15
	'-'            reduce using rule 15
	';'            reduce using rule 15
	'bool'         reduce using rule 15
	'break'        reduce using rule 15
	'continue'     reduce using rule 15
	'false'        reduce using rule 15
	'for'          reduce using rule 15
	'if'           reduce using rule 15
	'int'          reduce using rule 15
	'print'        reduce using rule 15
	'return'       reduce using rule 15
	'string'       reduce using rule 15
	'true'         reduce using rule 15
	'void'         reduce using rule 15
	'while'        reduce using rule 15
	'{'            reduce using rule 15
	'}'            reduce using rule 15
	L_Ident        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15


State 27

	Block -> '{' ListStmt . '}'                         (rule 12)

	'}'            shift, and enter state 85


State 28

	ListStmt -> Stmt . ListStmt                         (rule 14)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 40
	'bool'         shift, and enter state 7
	'break'        shift, and enter state 41
	'continue'     shift, and enter state 42
	'false'        shift, and enter state 43
	'for'          shift, and enter state 44
	'if'           shift, and enter state 45
	'int'          shift, and enter state 8
	'print'        shift, and enter state 46
	'return'       shift, and enter state 47
	'string'       shift, and enter state 9
	'true'         shift, and enter state 48
	'void'         shift, and enter state 10
	'while'        shift, and enter state 49
	'{'            shift, and enter state 22
	'}'            reduce using rule 13
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 23
	Integer        goto state 24
	String         goto state 25
	Block          goto state 26
	ListStmt       goto state 84
	Stmt           goto state 28
	Type           goto state 29
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 36

State 29

	Stmt -> Type . ListItem ';'                         (rule 21)

	L_Ident        shift, and enter state 2

	Ident          goto state 81
	Item           goto state 82
	ListItem       goto state 83

State 30

	Expr5 -> Expr6 .                                    (rule 48)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'to'           reduce using rule 48
	'||'           reduce using rule 48


State 31

	Expr4 -> Expr5 .                                    (rule 50)

	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'to'           reduce using rule 50
	'||'           reduce using rule 50


State 32

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr4 .                                    (rule 52)

	'!='           reduce using rule 52
	'%'            shift, and enter state 78
	'&&'           reduce using rule 52
	')'            reduce using rule 52
	'*'            shift, and enter state 79
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'/'            shift, and enter state 80
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'to'           reduce using rule 52
	'||'           reduce using rule 52

	MulOp          goto state 77

State 33

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr3 .                                    (rule 54)

	'!='           reduce using rule 54
	'&&'           reduce using rule 54
	')'            reduce using rule 54
	'+'            shift, and enter state 75
	','            reduce using rule 54
	'-'            shift, and enter state 76
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'to'           reduce using rule 54
	'||'           reduce using rule 54

	AddOp          goto state 74

State 34

	Expr2 -> Expr2 . RelOp Expr3                        (rule 53)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 55)
	Expr1 -> Expr2 .                                    (rule 56)

	'!='           shift, and enter state 67
	'&&'           shift, and enter state 68
	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'<'            shift, and enter state 69
	'<='           shift, and enter state 70
	'=='           shift, and enter state 71
	'>'            shift, and enter state 72
	'>='           shift, and enter state 73
	'to'           reduce using rule 56
	'||'           reduce using rule 56

	RelOp          goto state 66

State 35

	Expr -> Expr1 . '||' Expr                           (rule 57)
	Expr -> Expr1 .                                     (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	';'            reduce using rule 58
	'to'           reduce using rule 58
	'||'           shift, and enter state 65


State 36

	Stmt -> Expr . ';'                                  (rule 28)

	';'            shift, and enter state 64


State 37

	Expr5 -> '!' . Expr6                                (rule 47)

	'('            shift, and enter state 38
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 63

State 38

	Expr6 -> '(' . Expr ')'                             (rule 45)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 62

State 39

	Expr5 -> '-' . Expr6                                (rule 46)

	'('            shift, and enter state 38
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 61

State 40

	Stmt -> ';' .                                       (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'bool'         reduce using rule 20
	'break'        reduce using rule 20
	'continue'     reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'print'        reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 41

	Stmt -> 'break' . ';'                               (rule 29)

	';'            shift, and enter state 60


State 42

	Stmt -> 'continue' . ';'                            (rule 30)

	';'            shift, and enter state 59


State 43

	Expr6 -> 'false' .                                  (rule 42)

	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	')'            reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'to'           reduce using rule 42
	'||'           reduce using rule 42


State 44

	Stmt -> 'for' . '(' Ident 'from' Expr 'to' Expr ')' Block    (rule 19)

	'('            shift, and enter state 58


State 45

	Stmt -> 'if' . '(' Expr ')' Block                   (rule 16)
	Stmt -> 'if' . '(' Expr ')' Block 'else' Block      (rule 17)

	'('            shift, and enter state 57


State 46

	Stmt -> 'print' . '(' Expr ')' ';'                  (rule 27)

	'('            shift, and enter state 56


State 47

	Stmt -> 'return' . Expr ';'                         (rule 25)
	Stmt -> 'return' . ';'                              (rule 26)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	';'            shift, and enter state 55
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 54

State 48

	Expr6 -> 'true' .                                   (rule 41)

	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	')'            reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'to'           reduce using rule 41
	'||'           reduce using rule 41


State 49

	Stmt -> 'while' . '(' Expr ')' Block                (rule 18)

	'('            shift, and enter state 52


State 50

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'to'           reduce using rule 2
	'||'           reduce using rule 2


State 51

	String -> L_quoted .                                (rule 3)

	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'to'           reduce using rule 3
	'||'           reduce using rule 3


State 52

	Stmt -> 'while' '(' . Expr ')' Block                (rule 18)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 108

State 53

	Expr6 -> Ident .                                    (rule 39)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 44)

	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            shift, and enter state 86
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'to'           reduce using rule 39
	'||'           reduce using rule 39


State 54

	Stmt -> 'return' Expr . ';'                         (rule 25)

	';'            shift, and enter state 107


State 55

	Stmt -> 'return' ';' .                              (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'bool'         reduce using rule 26
	'break'        reduce using rule 26
	'continue'     reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'print'        reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 56

	Stmt -> 'print' '(' . Expr ')' ';'                  (rule 27)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 106

State 57

	Stmt -> 'if' '(' . Expr ')' Block                   (rule 16)
	Stmt -> 'if' '(' . Expr ')' Block 'else' Block      (rule 17)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 105

State 58

	Stmt -> 'for' '(' . Ident 'from' Expr 'to' Expr ')' Block    (rule 19)

	L_Ident        shift, and enter state 2

	Ident          goto state 104

State 59

	Stmt -> 'continue' ';' .                            (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'continue'     reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'print'        reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 60

	Stmt -> 'break' ';' .                               (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'continue'     reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'print'        reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 61

	Expr5 -> '-' Expr6 .                                (rule 46)

	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&&'           reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'/'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'to'           reduce using rule 46
	'||'           reduce using rule 46


State 62

	Expr6 -> '(' Expr . ')'                             (rule 45)

	')'            shift, and enter state 103


State 63

	Expr5 -> '!' Expr6 .                                (rule 47)

	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'to'           reduce using rule 47
	'||'           reduce using rule 47


State 64

	Stmt -> Expr ';' .                                  (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'bool'         reduce using rule 28
	'break'        reduce using rule 28
	'continue'     reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'print'        reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 65

	Expr -> Expr1 '||' . Expr                           (rule 57)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 102

State 66

	Expr2 -> Expr2 RelOp . Expr3                        (rule 53)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 101

State 67

	RelOp -> '!=' .                                     (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	'-'            reduce using rule 72
	'false'        reduce using rule 72
	'true'         reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 68

	Expr1 -> Expr2 '&&' . Expr1                         (rule 55)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 100

State 69

	RelOp -> '<' .                                      (rule 67)

	'!'            reduce using rule 67
	'('            reduce using rule 67
	'-'            reduce using rule 67
	'false'        reduce using rule 67
	'true'         reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 70

	RelOp -> '<=' .                                     (rule 68)

	'!'            reduce using rule 68
	'('            reduce using rule 68
	'-'            reduce using rule 68
	'false'        reduce using rule 68
	'true'         reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 71

	RelOp -> '==' .                                     (rule 71)

	'!'            reduce using rule 71
	'('            reduce using rule 71
	'-'            reduce using rule 71
	'false'        reduce using rule 71
	'true'         reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 72

	RelOp -> '>' .                                      (rule 69)

	'!'            reduce using rule 69
	'('            reduce using rule 69
	'-'            reduce using rule 69
	'false'        reduce using rule 69
	'true'         reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 73

	RelOp -> '>=' .                                     (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	'-'            reduce using rule 70
	'false'        reduce using rule 70
	'true'         reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 74

	Expr3 -> Expr3 AddOp . Expr4                        (rule 51)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 99

State 75

	AddOp -> '+' .                                      (rule 62)

	'!'            reduce using rule 62
	'('            reduce using rule 62
	'-'            reduce using rule 62
	'false'        reduce using rule 62
	'true'         reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 76

	AddOp -> '-' .                                      (rule 63)

	'!'            reduce using rule 63
	'('            reduce using rule 63
	'-'            reduce using rule 63
	'false'        reduce using rule 63
	'true'         reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 77

	Expr4 -> Expr4 MulOp . Expr5                        (rule 49)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 98

State 78

	MulOp -> '%' .                                      (rule 66)

	'!'            reduce using rule 66
	'('            reduce using rule 66
	'-'            reduce using rule 66
	'false'        reduce using rule 66
	'true'         reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 79

	MulOp -> '*' .                                      (rule 64)

	'!'            reduce using rule 64
	'('            reduce using rule 64
	'-'            reduce using rule 64
	'false'        reduce using rule 64
	'true'         reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 80

	MulOp -> '/' .                                      (rule 65)

	'!'            reduce using rule 65
	'('            reduce using rule 65
	'-'            reduce using rule 65
	'false'        reduce using rule 65
	'true'         reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 81

	Item -> Ident .                                     (rule 31)
	Item -> Ident . '=' Expr                            (rule 32)

	','            reduce using rule 31
	';'            reduce using rule 31
	'='            shift, and enter state 97


State 82

	ListItem -> Item .                                  (rule 33)
	ListItem -> Item . ',' ListItem                     (rule 34)

	','            shift, and enter state 96
	';'            reduce using rule 33


State 83

	Stmt -> Type ListItem . ';'                         (rule 21)

	';'            shift, and enter state 95


State 84

	ListStmt -> Stmt ListStmt .                         (rule 14)

	'}'            reduce using rule 14


State 85

	Block -> '{' ListStmt '}' .                         (rule 12)

	'!'            reduce using rule 12
	'('            reduce using rule 12
	'-'            reduce using rule 12
	';'            reduce using rule 12
	'bool'         reduce using rule 12
	'break'        reduce using rule 12
	'continue'     reduce using rule 12
	'else'         reduce using rule 12
	'false'        reduce using rule 12
	'for'          reduce using rule 12
	'if'           reduce using rule 12
	'int'          reduce using rule 12
	'print'        reduce using rule 12
	'return'       reduce using rule 12
	'string'       reduce using rule 12
	'true'         reduce using rule 12
	'void'         reduce using rule 12
	'while'        reduce using rule 12
	'{'            reduce using rule 12
	'}'            reduce using rule 12
	L_Ident        reduce using rule 12
	L_integ        reduce using rule 12
	L_quoted       reduce using rule 12
	%eof           reduce using rule 12


State 86

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 44)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	')'            reduce using rule 59
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 93
	ListExpr       goto state 94

State 87

	Stmt -> Ident '++' . ';'                            (rule 23)

	';'            shift, and enter state 92


State 88

	Stmt -> Ident '--' . ';'                            (rule 24)

	';'            shift, and enter state 91


State 89

	Stmt -> Ident '=' . Expr ';'                        (rule 22)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 90

State 90

	Stmt -> Ident '=' Expr . ';'                        (rule 22)

	';'            shift, and enter state 117


State 91

	Stmt -> Ident '--' ';' .                            (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'bool'         reduce using rule 24
	'break'        reduce using rule 24
	'continue'     reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'print'        reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 92

	Stmt -> Ident '++' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'bool'         reduce using rule 23
	'break'        reduce using rule 23
	'continue'     reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'print'        reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 93

	ListExpr -> Expr .                                  (rule 60)
	ListExpr -> Expr . ',' ListExpr                     (rule 61)

	')'            reduce using rule 60
	','            shift, and enter state 116


State 94

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 44)

	')'            shift, and enter state 115


State 95

	Stmt -> Type ListItem ';' .                         (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'bool'         reduce using rule 21
	'break'        reduce using rule 21
	'continue'     reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'print'        reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 96

	ListItem -> Item ',' . ListItem                     (rule 34)

	L_Ident        shift, and enter state 2

	Ident          goto state 81
	Item           goto state 82
	ListItem       goto state 114

State 97

	Item -> Ident '=' . Expr                            (rule 32)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 113

State 98

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'to'           reduce using rule 49
	'||'           reduce using rule 49


State 99

	Expr4 -> Expr4 . MulOp Expr5                        (rule 49)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 51)

	'!='           reduce using rule 51
	'%'            shift, and enter state 78
	'&&'           reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 79
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 80
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'to'           reduce using rule 51
	'||'           reduce using rule 51

	MulOp          goto state 77

State 100

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'to'           reduce using rule 55
	'||'           reduce using rule 55


State 101

	Expr3 -> Expr3 . AddOp Expr4                        (rule 51)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 53)

	'!='           reduce using rule 53
	'&&'           reduce using rule 53
	')'            reduce using rule 53
	'+'            shift, and enter state 75
	','            reduce using rule 53
	'-'            shift, and enter state 76
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'to'           reduce using rule 53
	'||'           reduce using rule 53

	AddOp          goto state 74

State 102

	Expr -> Expr1 '||' Expr .                           (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'to'           reduce using rule 57


State 103

	Expr6 -> '(' Expr ')' .                             (rule 45)

	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&&'           reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'/'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'to'           reduce using rule 45
	'||'           reduce using rule 45


State 104

	Stmt -> 'for' '(' Ident . 'from' Expr 'to' Expr ')' Block    (rule 19)

	'from'         shift, and enter state 112


State 105

	Stmt -> 'if' '(' Expr . ')' Block                   (rule 16)
	Stmt -> 'if' '(' Expr . ')' Block 'else' Block      (rule 17)

	')'            shift, and enter state 111


State 106

	Stmt -> 'print' '(' Expr . ')' ';'                  (rule 27)

	')'            shift, and enter state 110


State 107

	Stmt -> 'return' Expr ';' .                         (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'bool'         reduce using rule 25
	'break'        reduce using rule 25
	'continue'     reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'print'        reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 108

	Stmt -> 'while' '(' Expr . ')' Block                (rule 18)

	')'            shift, and enter state 109


State 109

	Stmt -> 'while' '(' Expr ')' . Block                (rule 18)

	'{'            shift, and enter state 22

	Block          goto state 122

State 110

	Stmt -> 'print' '(' Expr ')' . ';'                  (rule 27)

	';'            shift, and enter state 121


State 111

	Stmt -> 'if' '(' Expr ')' . Block                   (rule 16)
	Stmt -> 'if' '(' Expr ')' . Block 'else' Block      (rule 17)

	'{'            shift, and enter state 22

	Block          goto state 120

State 112

	Stmt -> 'for' '(' Ident 'from' . Expr 'to' Expr ')' Block    (rule 19)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 119

State 113

	Item -> Ident '=' Expr .                            (rule 32)

	','            reduce using rule 32
	';'            reduce using rule 32


State 114

	ListItem -> Item ',' ListItem .                     (rule 34)

	';'            reduce using rule 34


State 115

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 44)

	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'to'           reduce using rule 44
	'||'           reduce using rule 44


State 116

	ListExpr -> Expr ',' . ListExpr                     (rule 61)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	')'            reduce using rule 59
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 93
	ListExpr       goto state 118

State 117

	Stmt -> Ident '=' Expr ';' .                        (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'bool'         reduce using rule 22
	'break'        reduce using rule 22
	'continue'     reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'print'        reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 118

	ListExpr -> Expr ',' ListExpr .                     (rule 61)

	')'            reduce using rule 61


State 119

	Stmt -> 'for' '(' Ident 'from' Expr . 'to' Expr ')' Block    (rule 19)

	'to'           shift, and enter state 124


State 120

	Stmt -> 'if' '(' Expr ')' Block .                   (rule 16)
	Stmt -> 'if' '(' Expr ')' Block . 'else' Block      (rule 17)

	'!'            reduce using rule 16
	'('            reduce using rule 16
	'-'            reduce using rule 16
	';'            reduce using rule 16
	'bool'         reduce using rule 16
	'break'        reduce using rule 16
	'continue'     reduce using rule 16
	'else'         shift, and enter state 123
	'false'        reduce using rule 16
	'for'          reduce using rule 16
	'if'           reduce using rule 16
	'int'          reduce using rule 16
	'print'        reduce using rule 16
	'return'       reduce using rule 16
	'string'       reduce using rule 16
	'true'         reduce using rule 16
	'void'         reduce using rule 16
	'while'        reduce using rule 16
	'{'            reduce using rule 16
	'}'            reduce using rule 16
	L_Ident        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16


State 121

	Stmt -> 'print' '(' Expr ')' ';' .                  (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'bool'         reduce using rule 27
	'break'        reduce using rule 27
	'continue'     reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'print'        reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 122

	Stmt -> 'while' '(' Expr ')' Block .                (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'bool'         reduce using rule 18
	'break'        reduce using rule 18
	'continue'     reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'print'        reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 123

	Stmt -> 'if' '(' Expr ')' Block 'else' . Block      (rule 17)

	'{'            shift, and enter state 22

	Block          goto state 126

State 124

	Stmt -> 'for' '(' Ident 'from' Expr 'to' . Expr ')' Block    (rule 19)

	'!'            shift, and enter state 37
	'('            shift, and enter state 38
	'-'            shift, and enter state 39
	'false'        shift, and enter state 43
	'true'         shift, and enter state 48
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 50
	L_quoted       shift, and enter state 51

	Ident          goto state 53
	Integer        goto state 24
	String         goto state 25
	Expr6          goto state 30
	Expr5          goto state 31
	Expr4          goto state 32
	Expr3          goto state 33
	Expr2          goto state 34
	Expr1          goto state 35
	Expr           goto state 125

State 125

	Stmt -> 'for' '(' Ident 'from' Expr 'to' Expr . ')' Block    (rule 19)

	')'            shift, and enter state 127


State 126

	Stmt -> 'if' '(' Expr ')' Block 'else' Block .      (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'bool'         reduce using rule 17
	'break'        reduce using rule 17
	'continue'     reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'print'        reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 127

	Stmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' . Block    (rule 19)

	'{'            shift, and enter state 22

	Block          goto state 128

State 128

	Stmt -> 'for' '(' Ident 'from' Expr 'to' Expr ')' Block .    (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'bool'         reduce using rule 19
	'break'        reduce using rule 19
	'continue'     reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'print'        reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 73
Number of terminals: 42
Number of non-terminals: 26
Number of states: 129
